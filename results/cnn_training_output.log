nohup: ignoring input
/home/yangjun/lloyd/venv/lib/python3.10/site-packages/torch/cuda/__init__.py:174: UserWarning: CUDA initialization: The NVIDIA driver on your system is too old (found version 11040). Please update your GPU driver by downloading and installing a new version from the URL: http://www.nvidia.com/Download/index.aspx Alternatively, go to: https://pytorch.org to install a PyTorch version that has been compiled with your version of the CUDA driver. (Triggered internally at /pytorch/c10/cuda/CUDAFunctions.cpp:109.)
  return torch._C._cuda_getDeviceCount() > 0
Loading training data...
Training data shape: (14392, 42)
Test data shape: (3599, 42)
Number of classes: 9
Classes: ['090_Tm_11.5_HS_3.5' '090_Tm_7.5_HS_3.5' '090_Tm_9.5_HS_3.5'
 '135_Tm_11.5_HS_3.5' '135_Tm_7.5_HS_3.5' '135_Tm_9.5_HS_3.5'
 '180_Tm_11.5_HS_3.5' '180_Tm_7.5_HS_3.5' '180_Tm_9.5_HS_3.5']

Preparing data for CNN...
CNN training data shape: (14392, 7, 6)
CNN test data shape: (3599, 7, 6)

Creating Time-CNN model...
Model parameters: 159,433

Training Time-CNN model...
Using device: cpu
Epoch [1/10], Train Loss: 1.2732, Val Loss: 0.9246, Train Acc: 0.4557, Val Acc: 0.5839
Epoch [2/10], Train Loss: 1.0273, Val Loss: 0.8963, Train Acc: 0.5462, Val Acc: 0.5908
Epoch [3/10], Train Loss: 0.9853, Val Loss: 0.8663, Train Acc: 0.5601, Val Acc: 0.6078
Epoch [4/10], Train Loss: 0.9623, Val Loss: 0.8746, Train Acc: 0.5680, Val Acc: 0.6096
Epoch [5/10], Train Loss: 0.9330, Val Loss: 0.8315, Train Acc: 0.5850, Val Acc: 0.6297
Epoch [6/10], Train Loss: 0.9242, Val Loss: 0.8194, Train Acc: 0.5870, Val Acc: 0.6419
Epoch [7/10], Train Loss: 0.9099, Val Loss: 0.8067, Train Acc: 0.5915, Val Acc: 0.6395
Epoch [8/10], Train Loss: 0.9013, Val Loss: 0.7956, Train Acc: 0.5964, Val Acc: 0.6356
Epoch [9/10], Train Loss: 0.8860, Val Loss: 0.8139, Train Acc: 0.5999, Val Acc: 0.6360
Epoch [10/10], Train Loss: 0.8832, Val Loss: 0.7942, Train Acc: 0.6019, Val Acc: 0.6356

Evaluating Time-CNN model...

Time-CNN Test Accuracy: 0.6380

Classification Report:
                    precision    recall  f1-score   support

090_Tm_11.5_HS_3.5       0.72      0.19      0.30       400
 090_Tm_7.5_HS_3.5       0.62      0.68      0.65       400
 090_Tm_9.5_HS_3.5       0.40      0.65      0.50       400
135_Tm_11.5_HS_3.5       0.73      0.58      0.65       400
 135_Tm_7.5_HS_3.5       0.65      0.89      0.75       400
 135_Tm_9.5_HS_3.5       0.57      0.49      0.52       400
180_Tm_11.5_HS_3.5       0.71      0.68      0.69       400
 180_Tm_7.5_HS_3.5       0.91      0.92      0.92       399
 180_Tm_9.5_HS_3.5       0.63      0.67      0.65       400

          accuracy                           0.64      3599
         macro avg       0.66      0.64      0.63      3599
      weighted avg       0.66      0.64      0.63      3599

Training history saved to training_history_cnn.png
Time-CNN model saved to time_cnn_model.pth
Model comparison saved to model_comparison.png

============================================================
MODEL COMPARISON
============================================================
Bi-LSTM Accuracy: 0.6607
Time-CNN Accuracy: 0.6380
Improvement: -0.0228
============================================================

==================================================
TIME-CNN TRAINING COMPLETED
==================================================
Test Accuracy: 0.6380
Model saved as: time_cnn_model.pth
Results saved as: cnn_model_results.json
Plots saved as: training_history_cnn.png
==================================================
